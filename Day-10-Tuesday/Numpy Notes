What are NumPy Arrays?
NumPy is a Python package that stands for ‘Numerical Python’. It is the core library for scientific computing, which contains a powerful n-dimensional array object.

Where is NumPy used?
Python NumPy arrays provide tools for integrating C, C++, etc. It is also useful in linear algebra, random number capability etc. NumPy array can also be used as an efficient multi-dimensional container for generic data. Now, let me tell you what exactly is a Python NumPy array.

Python NumPy Array: Numpy array is a powerful N-dimensional array object which is in the form of rows and columns. We can initialize NumPy arrays from nested Python lists and access it elements. In order to perform these NumPy operations, the next question which will come in your mind is:

How do I install NumPy?
To install Python NumPy, go to your command prompt and type “pip install numpy”. Once the installation is completed, go to your IDE (For example: PyCharm) and simply import it by typing: “import numpy as np”

How do I start NumPy?
Let us see how it is implemented in PyCharm:

Single-dimensional Numpy Array:
1
2
3
import numpy as np
a=np.array([1,2,3])
print(a)
Output – [1 2 3]

Multi-dimensional Array:
1
2
a=np.array([(1,2,3),(4,5,6)])
print(a)
O/P – [[ 1 2 3]
[4 5 6]]

Python NumPy Array v/s List
Why NumPy is used in Python?
We use python NumPy array instead of a list because of the below three reasons:

Less Memory
Fast
Convenient
The very first reason to choose python NumPy array is that it occupies less memory as compared to list. Then, it is pretty fast in terms of execution and at the same time, it is very convenient to work with NumPy.

Python NumPy Operations
NumpyArray - python numpy tutorial - Edurekandim:
You can find the dimension of the array, whether it is a two-dimensional array or a single dimensional array. So, let us see this practically how we can find the dimensions. In the below code, with the help of ‘ndim’ function, I can find whether the array is of single dimension or multi dimension.
1
2
3
import numpy as np
a = np.array([(1,2,3),(4,5,6)])
print(a.ndim)
Output – 2

Since the output is 2, it is a two-dimensional array (multi dimension).

itemsize:
You can calculate the byte size of each element. In the below code, I have defined a single dimensional array and with the help of ‘itemsize’ function, we can find the size of each element.
1
2
3
import numpy as np
a = np.array([(1,2,3)])
print(a.itemsize)
Output – 4

So every element occupies 4 byte in the above numpy array.

reshape:
Reshape is when you change the number of rows and columns which gives a new view to an object. Now, let us take an example to reshape the below array:

slicing:
As you can see the ‘reshape’ function has showed its magic. Now, let’s take another operation i.e Slicing. Slicing is basically extracting particular set of elements from an array. This slicing operation is pretty much similar to the one which is there in the list as well.

linspace
This is another operation in python numpy which returns evenly spaced numbers over a specified interval.

max/ min
Next, we have some more operations in numpy such as to find the minimum, maximum as well the sum of the numpy array. Let’s go ahead in python numpy tutorial and execute it practically.

1
2
3
4
5
6
import numpy as np

a= np.array([1,2,3])
print(a.min())
print(a.max())
print(a.sum())
Output – 1 3 6
